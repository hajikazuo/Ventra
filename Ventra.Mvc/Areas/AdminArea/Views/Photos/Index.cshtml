@model IEnumerable<Ventra.Domain.Entities.Photo>

@{
    var pageName = "Imagens";
    ViewData["Title"] = pageName;
}

<div class="container-xl">
    <div class="mb-3">
    </div>
    <div class="row row-cards">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">Enviar imagens</h3>
                    <form asp-action="Create" asp-controller="Photos" method="post" class="dropzone" id="dropzone-multiple" autocomplete="off" novalidate enctype="multipart/form-data">
                        <input type="hidden" name="id" value="@ViewBag.ProductId" />
                        <div class="fallback">
                            <input name="file" type="file" multiple />
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="card">
                <div class="table-responsive">
                    <table class="table table-vcenter table-mobile-md card-table">
                        <thead>
                            <tr>
                                <th>Imagem</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Linhas serão inseridas via JS -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function attachDeleteHandlers() {
            document.querySelectorAll('.delete-photo').forEach(button => {
                button.removeEventListener('click', deleteHandler);
                button.addEventListener('click', deleteHandler);
            });
        }

        function deleteHandler() {
            const id = this.getAttribute('data-id');

            if (!confirm('Tem certeza que deseja excluir esta foto?')) return;

            axios.post(`/AdminArea/Photos/Delete`, null, { params: { id: id } })
                .then(response => {
                    if (response.data.success) {
                        const row = document.getElementById(`row-${id}`);
                        if (row) row.remove();
                    } else {
                        alert('Erro ao excluir.');
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    alert('Erro ao excluir a foto.');
                });
        }

        async function loadTable(productId) {
            try {
                const response = await axios.get('/AdminArea/Photos/GetAll', { params: { id: productId } });
                renderTable(response.data);
            } catch (error) {
                console.error('Erro ao buscar as fotos:', error);
                alert('Não foi possível carregar as fotos. Verifique o console para mais detalhes.');
            }
        }

        function renderTable(photos) {
            const tbody = document.querySelector('table tbody');
            tbody.innerHTML = '';

            photos.forEach(photo => {
                const row = `
                    <tr id="row-${photo.id}">
                        <td>
                            <img class="border" src="/img/products/${photo.name}" alt="Imagem do produto" style="width:100px; height: 100px;" />
                        </td>
                        <td>
                            <button class="btn btn-danger btn-sm delete-photo" data-id="${photo.id}">
                                <i class="ti ti-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;
                tbody.insertAdjacentHTML('beforeend', row);
            });

            attachDeleteHandlers();
        }

        Dropzone.autoDiscover = false;

        document.addEventListener("DOMContentLoaded", function () {
            const productId = '@ViewBag.ProductId';

            new Dropzone("#dropzone-multiple", {
                dictDefaultMessage: "Arraste as imagens aqui ou clique para enviar",
                init: function () {
                    this.on("success", function () {
                        loadTable(productId); 
                    });
                }
            });

            loadTable(productId); 
        });
    </script>
}
